version: 2.1
orbs:
  node: circleci/node@5.0.3
workflows:
  compile-workflow:
    jobs:
      - build:
          context:
            - DOCKER_CONTEXT
      - publish-github-release:
          requires:
            - build
          context:
            - DOCKER_CONTEXT
            - CREDENTIAL_CONTEXT
            - GITHUB_CONTEXT
          filters:
            branches:
              only:
                - fix_import_stringr
jobs:
  build:
    working_directory: ~/tmp
    docker:
      - image: inraep2m2/ci-r-base-devtools:4.2.3
    steps:
      - checkout
      - run:
          name: Install package dependencies
          command: R -e 'devtools::install_deps(dependencies = TRUE)'
      - run:
          name: Check package
          command: |
            R -e 'devtools::check()'
            NAMEPACKAGE=$(grep Package DESCRIPTION | awk '{print $2}')
            VERSION=$(grep Version DESCRIPTION | awk '{print $2}')
            R CMD build --no-manual .
            R CMD check --no-manual ${NAMEPACKAGE}_${VERSION}.tar.gz
            mkdir -p workspace
            mv ${NAMEPACKAGE}_${VERSION}.tar.gz workspace/

      - persist_to_workspace:
          root: workspace
          paths: 
            - .
  
  publish-github-release:
    working_directory: ~/tmp
    docker:
      - image: circleci/golang:1.17
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: "Publish Release on GitHub"
          command: |
            LAST_VERSION=$(git ls-remote --tags --sort="v:refname" https://${GITHUB_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git | tail -n1  | sed 's/.*\///; s/\^{}//') 
            NAMEPACKAGE=$(grep Package DESCRIPTION | awk '{print $2}')
            VERSION=$(grep Version DESCRIPTION | awk '{print $2}')
            # -------------------------------------------------------
            # utiliser gh ? => https://github.com/cli/cli/blob/trunk/docs/install_linux.md
            #                  https://cli.github.com/manual/gh_release_create
            # -------------------------------------------------------
            if [ "LAST_VERSION" != "VERSION" ]; then
              go get github.com/tcnksm/ghr
              BODY="# ${NAMEPACKAGE} ${VERSION}"
              ghr -t ${GITHUB_TOKEN} \
                  -u ${CIRCLE_PROJECT_USERNAME} \
                  -r ${CIRCLE_PROJECT_REPONAME} \
                  -c ${CIRCLE_SHA1} \
                  -n $VERSION \
                  -b "$BODY" \
                  -delete $VERSION workspace/${NAMEPACKAGE}_${VERSION}.tar.gz
            fi